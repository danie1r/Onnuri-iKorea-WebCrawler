{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "#스마트스토어 매출 (배송기준)\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "\n",
    "date_list = [\n",
    "    '2019-04-22', '2019-04-23', '2019-04-24', '2019-04-25', '2019-04-26',\n",
    "    '2019-04-29','2019-04-30','2019-05-01','2019-05-02','2019-05-03',\n",
    "    '2019-05-07','2019-05-08','2019-05-09','2019-05-10',\n",
    "    '2019-05-13','2019-05-14','2019-05-15','2019-05-16','2019-05-17',\n",
    "    '2019-05-20','2019-05-21','2019-05-22','2019-05-23','2019-05-24',\n",
    "    '2019-05-27','2019-05-28','2019-05-29','2019-05-30','2019-05-31',\n",
    "    '2019-06-03','2019-06-04','2019-06-05','2019-06-07',\n",
    "    '2019-06-10','2019-06-11','2019-06-12','2019-06-13','2019-06-14',\n",
    "    '2019-06-17','2019-06-18','2019-06-19','2019-06-20','2019-06-21',\n",
    "    '2019-06-24','2019-06-25','2019-06-26','2019-06-27','2019-06-28',\n",
    "    '2019-07-01','2019-07-02','2019-07-03','2019-07-04','2019-07-05',\n",
    "    '2019-07-08','2019-07-09', '2019-07-10', '2019-07-11','2019-07-12',\n",
    "    '2019-07-15','2019-07-16','2019-07-17','2019-07-18','2019-07-19',\n",
    "    '2019-07-22','2019-07-23','2019-07-24','2019-07-25','2019-07-26',\n",
    "    '2019-07-29','2019-07-30','2019-07-31','2019-08-01','2019-08-02',\n",
    "    '2019-08-05','2019-08-06','2019-08-07','2019-08-08','2019-08-09',\n",
    "    '2019-08-12','2019-08-13', '2019-08-14', '2019-08-16',\n",
    "    '2019-08-19', '2019-08-20', '2019-08-21', '2019-08-22', '2019-08-23', \n",
    "    '2019-08-26', '2019-08-27', '2019-08-28', '2019-08-29', '2019-08-30', \n",
    "    '2019-09-02', '2019-09-03', '2019-09-04', '2019-09-05', '2019-09-06', '2019-09-09', '2019-09-10',\n",
    "    '2019-09-16', '2019-09-17', '2019-09-18', '2019-09-19', '2019-09-23', '2019-09-24', '2019-09-25', '2019-09-26','2019-09-27', '2019-09-30','2019-10-01','2019-10-02', '2019-10-04',\n",
    "    '2019-10-07','2019-10-08','2019-10-10','2019-10-11','2019-10-14','2019-10-15','2019-10-16', '2019-10-17', '2019-10-18','2019-10-21'\n",
    "      ]\n",
    "\n",
    "channel = '스마트스토어_배송_'\n",
    "data_format = '.xlsx'\n",
    "\n",
    "frames = []\n",
    "for d in date_list:\n",
    "    df = pd.read_excel('/Users/danie1ryu/Desktop/배송 데이터 RAW/' + channel + d + data_format)\n",
    "    col_names = list(df.loc[0])\n",
    "    df = df.loc[1:, :]\n",
    "    df.columns = col_names\n",
    "    df = df[['결제일', '상품명', '상품별 총 주문금액']]\n",
    "    frames.append(df)\n",
    "\n",
    "df = pd.concat(frames)\n",
    "df = df.set_index('결제일')\n",
    "df = df.reset_index()\n",
    "\n",
    "for i in range(len(df)):\n",
    "    df.loc[i, '결제일'] = str(df.loc[i, '결제일']).split(' ')[0]\n",
    "\n",
    "for i in range(len(df)):\n",
    "    if '점프업' in df.loc[i, '상품명'] or '하이정' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '점프업하이정'\n",
    "    elif '호박' in df.loc[i, '상품명'] and '마스크' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '호박마스크팩'\n",
    "    elif '호박' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '호박앰플'\n",
    "    elif '테일러' in df.loc[i, '상품명'] or '푸룬' in df.loc[i, '상품명'] or '젤리' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '테일러푸룬젤리'\n",
    "    elif '팍팍' in df.loc[i, '상품명'] or '콜라겐' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '팍팍콜라겐'\n",
    "    elif '아리얼' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '아리얼패드'\n",
    "    elif '디어달리아' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '디어달리아'\n",
    "    elif '바이위시트렌드' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '바이위시트렌드'\n",
    "    else:\n",
    "        df.loc[i, '상품'] = 'Others'\n",
    "\n",
    "df = df[['결제일', '상품', '상품별 총 주문금액']]\n",
    "\n",
    "df = df.groupby(['결제일', '상품'], as_index=False).sum()\n",
    "\n",
    "df_add = pd.DataFrame({'스마트스토어_점프업하이정': [0], '스마트스토어_호박앰플': [0], '스마트스토어_테일러푸룬젤리': [0], '스마트스토어_팍팍콜라겐': [0], '스마트스토어_아리얼패드': [0], '스마트스토어_디어달리아': [0], '스마트스토어_바이위시트렌드': [0], '스마트스토어_호박마스크팩': [0]})\n",
    "\n",
    "\n",
    "df = pd.concat([df, df_add], axis=1)\n",
    "df= df.fillna(0)\n",
    "\n",
    "for i in range(len(df)):\n",
    "    if df.loc[i, '상품'] == '점프업하이정':\n",
    "        df.loc[i, '스마트스토어_점프업하이정'] = df.loc[i, '상품별 총 주문금액']\n",
    "    elif df.loc[i, '상품'] == '호박앰플':\n",
    "        df.loc[i, '스마트스토어_호박앰플'] = df.loc[i, '상품별 총 주문금액']\n",
    "    elif df.loc[i, '상품'] == '테일러푸룬젤리':\n",
    "        df.loc[i, '스마트스토어_테일러푸룬젤리'] = df.loc[i, '상품별 총 주문금액']\n",
    "    elif df.loc[i, '상품'] == '팍팍콜라겐':\n",
    "        df.loc[i, '스마트스토어_팍팍콜라겐'] = df.loc[i, '상품별 총 주문금액']\n",
    "    elif df.loc[i, '상품'] == '아리얼패드':\n",
    "        df.loc[i, '스마트스토어_아리얼패드'] = df.loc[i, '상품별 총 주문금액']\n",
    "    elif df.loc[i, '상품'] == '디어달리아':\n",
    "        df.loc[i, '스마트스토어_디어달리아'] = df.loc[i, '상품별 총 주문금액']\n",
    "    elif df.loc[i, '상품'] == '바이위시트렌드':\n",
    "        df.loc[i, '스마트스토어_바이위시트렌드'] = df.loc[i, '상품별 총 주문금액']\n",
    "    elif df.loc[i, '상품'] == '호박마스크팩':\n",
    "        df.loc[i, '스마트스토어_호박마스크팩'] = df.loc[i, '상품별 총 주문금액']\n",
    "        \n",
    "df = df.drop(['상품', '상품별 총 주문금액'], axis=1)\n",
    "df = df.rename(columns={'결제일': '날짜'})\n",
    "df = df.groupby('날짜').sum()\n",
    "\n",
    "df\n",
    "\n",
    "df.to_csv('/Users/danie1ryu/Downloads/스마트스토어_매출(배송기준)_2019-04-22_2019-10-21.csv')\n",
    "df.to_excel('/Users/danie1ryu/Downloads/스마트스토어_매출(배송기준)_2019-04-22_2019-10-21.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "#자사몰 매출 (배송기준)\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "\n",
    "date_list = [\n",
    "    '2019-04-22', '2019-04-23', '2019-04-25', '2019-04-26',\n",
    "    '2019-04-29','2019-04-30','2019-05-01','2019-05-02','2019-05-03',\n",
    "    '2019-05-07','2019-05-08','2019-05-09','2019-05-10',\n",
    "    '2019-05-13','2019-05-14','2019-05-15','2019-05-16','2019-05-17',\n",
    "    '2019-05-20','2019-05-21','2019-05-22','2019-05-23','2019-05-24',\n",
    "    '2019-05-27','2019-05-28','2019-05-29','2019-05-30','2019-05-31',\n",
    "    '2019-06-03','2019-06-04','2019-06-05','2019-06-07',\n",
    "    '2019-06-10','2019-06-11','2019-06-12','2019-06-13','2019-06-14',\n",
    "    '2019-06-17','2019-06-18','2019-06-19','2019-06-20','2019-06-21',\n",
    "    '2019-06-24','2019-06-25','2019-06-26','2019-06-27','2019-06-28',\n",
    "    '2019-07-01','2019-07-02','2019-07-03','2019-07-04','2019-07-05',\n",
    "    '2019-07-08','2019-07-09', '2019-07-10', '2019-07-11','2019-07-12',\n",
    "    '2019-07-15','2019-07-16','2019-07-17','2019-07-18','2019-07-19',\n",
    "    '2019-07-22','2019-07-23','2019-07-24','2019-07-25','2019-07-26',\n",
    "    '2019-07-29','2019-07-30','2019-07-31','2019-08-01','2019-08-02',\n",
    "    '2019-08-05','2019-08-06','2019-08-07','2019-08-08','2019-08-09',\n",
    "    '2019-08-12','2019-08-13', '2019-08-14', '2019-08-16',\n",
    "    '2019-08-19', '2019-08-20', '2019-08-21', '2019-08-22', '2019-08-23', \n",
    "    '2019-08-26', '2019-08-27', '2019-08-28', '2019-08-29', '2019-08-30', \n",
    "    '2019-09-02', '2019-09-03', '2019-09-04', '2019-09-05', '2019-09-06', '2019-09-09',\n",
    "    '2019-09-10', '2019-09-16', '2019-09-17', '2019-09-18', '2019-09-19', '2019-09-23','2019-09-24', '2019-09-25', '2019-09-26','2019-09-27', '2019-09-30','2019-10-02', '2019-10-04',\n",
    "    '2019-10-07','2019-10-08','2019-10-10','2019-10-11','2019-10-14','2019-10-15','2019-10-16', '2019-10-17', '2019-10-18','2019-10-21'\n",
    "      ]\n",
    "\n",
    "channel = '자사몰_배송_'\n",
    "data_format = '.xlsx'\n",
    "\n",
    "frames = []\n",
    "for d in date_list:\n",
    "    df = pd.read_excel('/Users/danie1ryu/Desktop/배송 데이터 RAW/' + channel + d + data_format)\n",
    "    df = df[['주문일자', '주문 상품명', '총 품목 금액']]\n",
    "    frames.append(df)\n",
    "\n",
    "df = pd.concat(frames)\n",
    "df = df.set_index('주문일자')\n",
    "df = df.reset_index()\n",
    "\n",
    "for i in range(len(df)):\n",
    "    df.loc[i, '주문일자'] = str(df.loc[i, '주문일자']).split(' ')[0]\n",
    "\n",
    "for i in range(len(df)):\n",
    "    if '점프업' in df.loc[i, '주문 상품명'] or '하이정' in df.loc[i, '주문 상품명']:\n",
    "        df.loc[i, '상품'] = '점프업하이정'\n",
    "    elif '호박' in df.loc[i, '주문 상품명'] and '마스크' in df.loc[i, '주문 상품명']:\n",
    "        df.loc[i, '상품'] = '호박마스크팩'\n",
    "    elif '호박' in df.loc[i, '주문 상품명']:\n",
    "        df.loc[i, '상품'] = '호박앰플'\n",
    "    elif '테일러' in df.loc[i, '주문 상품명'] or '푸룬' in df.loc[i, '주문 상품명'] or '젤리' in df.loc[i, '주문 상품명']:\n",
    "        df.loc[i, '상품'] = '테일러푸룬젤리'\n",
    "    elif '팍팍' in df.loc[i, '주문 상품명'] or '콜라겐' in df.loc[i, '주문 상품명']:\n",
    "        df.loc[i, '상품'] = '팍팍콜라겐'\n",
    "    elif '아리얼' in df.loc[i, '주문 상품명']:\n",
    "        df.loc[i, '상품'] = '아리얼패드'\n",
    "    elif '디어달리아' in df.loc[i, '주문 상품명']:\n",
    "        df.loc[i, '상품'] = '디어달리아'\n",
    "    elif '바이위시트렌드' in df.loc[i, '주문 상품명']:\n",
    "        df.loc[i, '상품'] = '바이위시트렌드'\n",
    "    else:\n",
    "        df.loc[i, '상품'] = 'Others'\n",
    "\n",
    "df = df[['주문일자', '상품', '총 품목 금액']]\n",
    "\n",
    "df = df.groupby(['주문일자', '상품'], as_index=False).sum()\n",
    "\n",
    "df_add = pd.DataFrame({'자사몰_점프업하이정': [0], '자사몰_호박앰플': [0], '자사몰_테일러푸룬젤리': [0], '자사몰_팍팍콜라겐': [0], '자사몰_아리얼패드': [0], '자사몰_디어달리아': [0], '자사몰_바이위시트렌드': [0], '자사몰_호박마스크팩': [0]})\n",
    "\n",
    "\n",
    "df = pd.concat([df, df_add], axis=1)\n",
    "df= df.fillna(0)\n",
    "\n",
    "for i in range(len(df)):\n",
    "    if df.loc[i, '상품'] == '점프업하이정':\n",
    "        df.loc[i, '자사몰_점프업하이정'] = df.loc[i, '총 품목 금액']\n",
    "    elif df.loc[i, '상품'] == '호박앰플':\n",
    "        df.loc[i, '자사몰_호박앰플'] = df.loc[i, '총 품목 금액']\n",
    "    elif df.loc[i, '상품'] == '테일러푸룬젤리':\n",
    "        df.loc[i, '자사몰_테일러푸룬젤리'] = df.loc[i, '총 품목 금액']\n",
    "    elif df.loc[i, '상품'] == '팍팍콜라겐':\n",
    "        df.loc[i, '자사몰_팍팍콜라겐'] = df.loc[i, '총 품목 금액']\n",
    "    elif df.loc[i, '상품'] == '아리얼패드':\n",
    "        df.loc[i, '자사몰_아리얼패드'] = df.loc[i, '총 품목 금액']\n",
    "    elif df.loc[i, '상품'] == '디어달리아':\n",
    "        df.loc[i, '자사몰_디어달리아'] = df.loc[i, '총 품목 금액']\n",
    "    elif df.loc[i, '상품'] == '바이위시트렌드':\n",
    "        df.loc[i, '자사몰_바이위시트렌드'] = df.loc[i, '총 품목 금액']\n",
    "    elif df.loc[i, '상품'] == '호박마스크팩':\n",
    "        df.loc[i, '자사몰_호박마스크팩'] = df.loc[i, '총 품목 금액']\n",
    "        \n",
    "df = df.drop(['상품', '총 품목 금액'], axis=1)\n",
    "df = df.rename(columns={'주문일자': '날짜'})\n",
    "df = df.groupby('날짜').sum()\n",
    "\n",
    "df\n",
    "\n",
    "df.to_csv('/Users/danie1ryu/Downloads/자사몰_매출(배송기준)_2019-04-22_2019-09-21.csv')\n",
    "df.to_excel('/Users/danie1ryu/Downloads/자사몰_매출(배송기준)_2019-04-22_2019-09-21.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "#쿠팡 매출 (배송기준)\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "\n",
    "date_list = [\n",
    "    '2019-04-22', '2019-04-23', '2019-04-24', '2019-04-25', '2019-04-26',\n",
    "    '2019-04-29','2019-04-30','2019-05-01','2019-05-02','2019-05-03',\n",
    "    '2019-05-07','2019-05-08','2019-05-09','2019-05-10',\n",
    "    '2019-05-14','2019-05-15','2019-05-16','2019-05-17',\n",
    "    '2019-05-20','2019-05-21','2019-05-22','2019-05-23','2019-05-24',\n",
    "    '2019-05-27','2019-05-28','2019-05-29','2019-05-30','2019-05-31',\n",
    "    '2019-06-03','2019-06-04','2019-06-05','2019-06-07',\n",
    "    '2019-06-10','2019-06-11','2019-06-12','2019-06-13','2019-06-14',\n",
    "    '2019-06-17','2019-06-18','2019-06-19','2019-06-20','2019-06-21',\n",
    "    '2019-06-24','2019-06-25','2019-06-26','2019-06-27','2019-06-28',\n",
    "    '2019-07-01','2019-07-02','2019-07-03','2019-07-04','2019-07-05',\n",
    "    '2019-07-08','2019-07-09', '2019-07-10', '2019-07-11','2019-07-12',\n",
    "    '2019-07-15','2019-07-16','2019-07-17','2019-07-18','2019-07-19',\n",
    "    '2019-07-22','2019-07-23','2019-07-24','2019-07-25','2019-07-26',\n",
    "    '2019-07-29','2019-07-30','2019-07-31','2019-08-01','2019-08-02',\n",
    "    '2019-08-05','2019-08-06','2019-08-07','2019-08-08','2019-08-09',\n",
    "    '2019-08-12','2019-08-13', '2019-08-14', '2019-08-16',\n",
    "    '2019-08-19', '2019-08-20', '2019-08-21', '2019-08-22', '2019-08-23', \n",
    "    '2019-08-26', '2019-08-27', '2019-08-28', '2019-08-29', '2019-08-30', \n",
    "    '2019-09-02', '2019-09-03', '2019-09-04', '2019-09-05', '2019-09-06',\n",
    "    '2019-09-09', '2019-09-10', '2019-09-16', '2019-09-17', '2019-09-18', '2019-09-19', '2019-09-23','2019-10-02', '2019-10-04',\n",
    "    '2019-10-07','2019-10-08','2019-10-10','2019-10-11','2019-10-14','2019-10-15','2019-10-16', '2019-10-17', '2019-10-18','2019-10-21'\n",
    "      ]\n",
    "      \n",
    "\n",
    "channel = '쿠팡_배송_'\n",
    "data_format = '.xlsx'\n",
    "\n",
    "frames = []\n",
    "for d in date_list:\n",
    "    df = pd.read_excel('/Users/danie1ryu/Desktop/배송 데이터 RAW/' + channel + d + data_format)\n",
    "    df = df[['주문일', '노출상품명(옵션명)', '결제액']]\n",
    "    frames.append(df)\n",
    "\n",
    "df = pd.concat(frames)\n",
    "df = df.set_index('주문일')\n",
    "df = df.reset_index()\n",
    "\n",
    "for i in range(len(df)):\n",
    "    df.loc[i, '주문일'] = str(df.loc[i, '주문일']).split(' ')[0]\n",
    "\n",
    "for i in range(len(df)):\n",
    "    if '점프업' in df.loc[i, '노출상품명(옵션명)'] or '하이정' in df.loc[i, '노출상품명(옵션명)']:\n",
    "        df.loc[i, '상품'] = '점프업하이정'\n",
    "    elif '호박' in df.loc[i, '노출상품명(옵션명)'] and '마스크' in df.loc[i, '노출상품명(옵션명)']:\n",
    "        df.loc[i, '상품'] = '호박마스크팩'\n",
    "    elif '호박' in df.loc[i, '노출상품명(옵션명)']:\n",
    "        df.loc[i, '상품'] = '호박앰플'\n",
    "    elif '테일러' in df.loc[i, '노출상품명(옵션명)'] or '푸룬' in df.loc[i, '노출상품명(옵션명)'] or '젤리' in df.loc[i, '노출상품명(옵션명)']:\n",
    "        df.loc[i, '상품'] = '테일러푸룬젤리'\n",
    "    elif '팍팍' in df.loc[i, '노출상품명(옵션명)'] or '콜라겐' in df.loc[i, '노출상품명(옵션명)']:\n",
    "        df.loc[i, '상품'] = '팍팍콜라겐'\n",
    "    elif '아리얼' in df.loc[i, '노출상품명(옵션명)']:\n",
    "        df.loc[i, '상품'] = '아리얼패드'\n",
    "    elif '디어달리아' in df.loc[i, '노출상품명(옵션명)']:\n",
    "        df.loc[i, '상품'] = '디어달리아'\n",
    "    elif '바이위시트렌드' in df.loc[i, '노출상품명(옵션명)']:\n",
    "        df.loc[i, '상품'] = '바이위시트렌드'\n",
    "    else:\n",
    "        df.loc[i, '상품'] = 'Others'\n",
    "\n",
    "df = df[['주문일', '상품', '결제액']]\n",
    "\n",
    "df = df.groupby(['주문일', '상품'], as_index=False).sum()\n",
    "\n",
    "df_add = pd.DataFrame({'쿠팡_점프업하이정': [0], '쿠팡_호박앰플': [0], '쿠팡_테일러푸룬젤리': [0], '쿠팡_팍팍콜라겐': [0], '쿠팡_아리얼패드': [0], '쿠팡_디어달리아': [0], '쿠팡_바이위시트렌드': [0], '쿠팡_호박마스크팩': [0]})\n",
    "\n",
    "\n",
    "df = pd.concat([df, df_add], axis=1)\n",
    "df= df.fillna(0)\n",
    "\n",
    "for i in range(len(df)):\n",
    "    if df.loc[i, '상품'] == '점프업하이정':\n",
    "        df.loc[i, '쿠팡_점프업하이정'] = df.loc[i, '결제액']\n",
    "    elif df.loc[i, '상품'] == '호박앰플':\n",
    "        df.loc[i, '쿠팡_호박앰플'] = df.loc[i, '결제액']\n",
    "    elif df.loc[i, '상품'] == '테일러푸룬젤리':\n",
    "        df.loc[i, '쿠팡_테일러푸룬젤리'] = df.loc[i, '결제액']\n",
    "    elif df.loc[i, '상품'] == '팍팍콜라겐':\n",
    "        df.loc[i, '쿠팡_팍팍콜라겐'] = df.loc[i, '결제액']\n",
    "    elif df.loc[i, '상품'] == '아리얼패드':\n",
    "        df.loc[i, '쿠팡_아리얼패드'] = df.loc[i, '결제액']\n",
    "    elif df.loc[i, '상품'] == '디어달리아':\n",
    "        df.loc[i, '쿠팡_디어달리아'] = df.loc[i, '결제액']\n",
    "    elif df.loc[i, '상품'] == '바이위시트렌드':\n",
    "        df.loc[i, '쿠팡_바이위시트렌드'] = df.loc[i, '결제액']\n",
    "    elif df.loc[i, '상품'] == '호박마스크팩':\n",
    "        df.loc[i, '쿠팡_호박마스크팩'] = df.loc[i, '결제액']\n",
    "        \n",
    "df = df.drop(['상품', '결제액'], axis=1)\n",
    "df = df.rename(columns={'주문일': '날짜'})\n",
    "df = df.groupby('날짜').sum()\n",
    "\n",
    "df\n",
    "\n",
    "df.to_csv('/Users/danie1ryu/Downloads/쿠팡_매출(배송기준)_2019-04-22_2019-10-21.csv')\n",
    "df.to_excel('/Users/danie1ryu/Downloads/쿠팡_매출(배송기준)_2019-04-22_2019-10-21.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#ESM 매출\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "date_list = [\n",
    "            '2019-04-22', '2019-04-24', '2019-05-02', '2019-05-03', '2019-05-07', '2019-05-08',\n",
    "            '2019-05-14', '2019-05-15', '2019-05-20', '2019-05-22', '2019-05-23', '2019-05-27', '2019-05-28',\n",
    "            '2019-05-29', '2019-05-31', '2019-06-03', '2019-06-04', '2019-06-05', '2019-06-07', '2019-06-10',\n",
    "            '2019-06-11', '2019-06-12', '2019-06-13', '2019-06-14', '2019-06-17', '2019-06-18', '2019-06-19',\n",
    "            '2019-06-20', '2019-06-21', '2019-06-24', '2019-06-25', '2019-06-26', '2019-06-27', '2019-06-28',\n",
    "            '2019-07-01', '2019-07-02', '2019-07-03', '2019-07-04',\n",
    "            '2019-07-05',  '2019-07-08', '2019-07-09', '2019-07-10', '2019-07-11', '2019-07-12', '2019-07-15', '2019-07-16',\n",
    "            '2019-07-17', '2019-07-18', '2019-07-19', '2019-07-22', '2019-07-23', '2019-07-24', '2019-07-25',\n",
    "            '2019-07-26', '2019-07-29', '2019-07-30', '2019-07-31', '2019-08-01', '2019-08-02', '2019-08-05',\n",
    "            '2019-08-06', '2019-08-07', '2019-08-08', '2019-08-09', '2019-08-12', '2019-08-13', '2019-08-14',\n",
    "            '2019-08-16', '2019-08-19', '2019-08-20', '2019-08-21', '2019-08-22', '2019-08-23', '2019-08-26',\n",
    "            '2019-08-27', '2019-08-28', '2019-08-29', '2019-08-30', \n",
    "            '2019-09-02', '2019-09-03', '2019-09-04', '2019-09-05', '2019-09-06', '2019-09-09', '2019-09-10',\n",
    "            '2019-09-16', '2019-09-17', '2019-09-18', '2019-09-19', '2019-09-23'\n",
    "            ]\n",
    "\n",
    "frames = []\n",
    "for d in date_list:\n",
    "    df = pd.read_excel('/Users/londonpark/Desktop/배송 데이터 RAW/ESM_배송_' + d + '.xls')\n",
    "    df = df[['상품명', '주문일자(결제확인전)', '정산예정금액', '서비스이용료']]\n",
    "    for i in range(len(df)):\n",
    "        df.loc[i, '총상품금액'] = int(''.join(str(df.loc[i, '정산예정금액']).split(','))) + int(''.join(str(df.loc[i, '서비스이용료']).split(',')))\n",
    "    frames.append(df)\n",
    "\n",
    "df = pd.concat(frames)\n",
    "df = df.set_index('주문일자(결제확인전)')\n",
    "df = df.reset_index()\n",
    "\n",
    "df = df[['주문일자(결제확인전)', '상품명', '총상품금액']]\n",
    "\n",
    "df = df.rename(columns={'주문일자(결제확인전)': '주문일'})\n",
    "\n",
    "for i in range(len(df)):\n",
    "    df.loc[i, '주문일'] = str(df.loc[i, '주문일']).split(' ')[0]\n",
    "\n",
    "\n",
    "for i in range(len(df)):\n",
    "    df.loc[i, '주문일'] = str(df.loc[i, '주문일']).split(' ')[0]\n",
    "    if '점프업' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '점프업하이정'\n",
    "    elif '호박'in df.loc[i, '상품명'] and '마스크' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '호박마스크팩'\n",
    "    elif '호박' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '호박앰플'\n",
    "    elif '푸룬' in df.loc[i, '상품명'] or '테일러' in df.loc[i, '상품명'] or '젤리' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '테일러푸룬젤리'\n",
    "    elif '팍팍' in df.loc[i, '상품명'] or '콜라겐' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '팍팍콜라겐'\n",
    "    elif '아리얼' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '아리얼패드'\n",
    "    elif '디어달리아' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '디어달리아'\n",
    "    elif '바이위시트렌드' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '바이위시트렌드'\n",
    "    else:\n",
    "        df.loc[i, '상품'] = 'Others'\n",
    "\n",
    "df = df.groupby(['주문일', '상품'], as_index=False).sum()\n",
    "\n",
    "df_add = pd.DataFrame({'ESM_점프업하이정': [0], 'ESM_호박앰플': [0], 'ESM_테일러푸룬젤리': [0], 'ESM_팍팍콜라겐': [0], 'ESM_아리얼패드': [0], 'ESM_디어달리아': [0], 'ESM_바이위시트렌드': [0], 'ESM_호박마스크팩': [0]})\n",
    "\n",
    "\n",
    "df = pd.concat([df, df_add], axis=1)\n",
    "df= df.fillna(0)\n",
    "\n",
    "for i in range(len(df)):\n",
    "    if df.loc[i, '상품'] == '점프업하이정':\n",
    "        df.loc[i, 'ESM_점프업하이정'] = df.loc[i, '총상품금액']\n",
    "    elif df.loc[i, '상품'] == '호박앰플':\n",
    "        df.loc[i, 'ESM_호박앰플'] = df.loc[i, '총상품금액']\n",
    "    elif df.loc[i, '상품'] == '테일러푸룬젤리':\n",
    "        df.loc[i, 'ESM_테일러푸룬젤리'] = df.loc[i, '총상품금액']\n",
    "    elif df.loc[i, '상품'] == '팍팍콜라겐':\n",
    "        df.loc[i, 'ESM_팍팍콜라겐'] = df.loc[i, '총상품금액']\n",
    "    elif df.loc[i, '상품'] == '아리얼패드':\n",
    "        df.loc[i, 'ESM_아리얼패드'] = df.loc[i, '총상품금액']\n",
    "    elif df.loc[i, '상품'] == '디어달리아':\n",
    "        df.loc[i, 'ESM_디어달리아'] = df.loc[i, '총상품금액']\n",
    "    elif df.loc[i, '상품'] == '바이위시트렌드':\n",
    "        df.loc[i, 'ESM_바이위시트렌드'] = df.loc[i, '총상품금액']\n",
    "    elif df.loc[i, '상품'] == '호박마스크팩':\n",
    "        df.loc[i, 'ESM_호박마스크팩'] = df.loc[i, '총상품금액']\n",
    "        \n",
    "df = df.drop(['상품', '총상품금액'], axis=1)\n",
    "df = df.rename(columns={'주문일': '날짜'})\n",
    "df = df.groupby('날짜').sum()\n",
    "\n",
    "df.to_csv('/Users/londonpark/Downloads/ESM_매출(배송기준)_2019-04-22_2019-09-23.csv')\n",
    "df.to_excel('/Users/londonpark/Downloads/ESM_매출(배송기준)_2019-04-22_2019-09-23.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "#위메프 매출 (배송기준)\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "\n",
    "date_list = [\n",
    "    '2019-06-04','2019-06-05','2019-06-07',\n",
    "    '2019-06-11','2019-06-12','2019-06-13','2019-06-14',\n",
    "    '2019-06-17','2019-06-18','2019-06-19','2019-06-20','2019-06-21',\n",
    "    '2019-06-24','2019-06-25','2019-06-26','2019-06-27','2019-06-28',\n",
    "    '2019-07-01','2019-07-02','2019-07-03','2019-07-04','2019-07-05',\n",
    "    '2019-07-08','2019-07-09', '2019-07-10', '2019-07-11','2019-07-12',\n",
    "    '2019-07-15','2019-07-16','2019-07-17','2019-07-18','2019-07-19',\n",
    "    '2019-07-22','2019-07-23','2019-07-24','2019-07-25','2019-07-26',\n",
    "    '2019-07-29','2019-07-30','2019-07-31','2019-08-01','2019-08-02',\n",
    "    '2019-08-05','2019-08-06','2019-08-07','2019-08-08','2019-08-09',\n",
    "    '2019-08-12','2019-08-13', '2019-08-14', '2019-08-16',\n",
    "    '2019-08-19', '2019-08-20', '2019-08-21', '2019-08-22', '2019-08-23', \n",
    "    '2019-08-26', '2019-08-27', '2019-08-28', '2019-08-29', '2019-08-30', \n",
    "    '2019-09-02', '2019-09-03', '2019-09-04', '2019-09-05', '2019-09-06',\n",
    "    '2019-09-09', '2019-09-10', '2019-09-16', '2019-09-17', '2019-09-18', '2019-09-19', '2019-09-23','2019-10-02', '2019-10-04',\n",
    "    '2019-10-07','2019-10-08','2019-10-10','2019-10-11','2019-10-14','2019-10-15','2019-10-16', '2019-10-17', '2019-10-18','2019-10-21'\n",
    "      ]\n",
    "\n",
    "channel = '위메프_배송_'\n",
    "data_format = '.xlsx'\n",
    "\n",
    "frames = []\n",
    "for d in date_list:\n",
    "    df = pd.read_excel('/Users/danie1ryu/Desktop/배송 데이터 RAW/' + channel + d + data_format)\n",
    "    df = df[['주문일', '상품명', '총상품금액']]\n",
    "    frames.append(df)\n",
    "\n",
    "df = pd.concat(frames)\n",
    "df = df.set_index('주문일')\n",
    "df = df.reset_index()\n",
    "\n",
    "for i in range(len(df)):\n",
    "    df.loc[i, '주문일'] = str(df.loc[i, '주문일']).split(' ')[0]\n",
    "\n",
    "for i in range(len(df)):\n",
    "    if '점프업' in df.loc[i, '상품명'] or '하이정' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '점프업하이정'\n",
    "    elif '호박' in df.loc[i, '상품명'] and '마스크' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '호박마스크팩'\n",
    "    elif '호박' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '호박앰플'\n",
    "    elif '테일러' in df.loc[i, '상품명'] or '푸룬' in df.loc[i, '상품명'] or '젤리' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '테일러푸룬젤리'\n",
    "    elif '팍팍' in df.loc[i, '상품명'] or '콜라겐' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '팍팍콜라겐'\n",
    "    elif '아리얼' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '아리얼패드'\n",
    "    elif '디어달리아' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '디어달리아'\n",
    "    elif '바이위시트렌드' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '바이위시트렌드'\n",
    "    else:\n",
    "        df.loc[i, '상품'] = 'Others'\n",
    "\n",
    "df = df[['주문일', '상품', '총상품금액']]\n",
    "\n",
    "df = df.groupby(['주문일', '상품'], as_index=False).sum()\n",
    "\n",
    "df_add = pd.DataFrame({'위메프_점프업하이정': [0], '위메프_호박앰플': [0], '위메프_테일러푸룬젤리': [0], '위메프_팍팍콜라겐': [0], '위메프_아리얼패드': [0], '위메프_디어달리아': [0], '위메프_바이위시트렌드': [0], '위메프_호박마스크팩': [0]})\n",
    "\n",
    "\n",
    "df = pd.concat([df, df_add], axis=1)\n",
    "df= df.fillna(0)\n",
    "\n",
    "for i in range(len(df)):\n",
    "    if df.loc[i, '상품'] == '점프업하이정':\n",
    "        df.loc[i, '위메프_점프업하이정'] = df.loc[i, '총상품금액']\n",
    "    elif df.loc[i, '상품'] == '호박앰플':\n",
    "        df.loc[i, '위메프_호박앰플'] = df.loc[i, '총상품금액']\n",
    "    elif df.loc[i, '상품'] == '테일러푸룬젤리':\n",
    "        df.loc[i, '위메프_테일러푸룬젤리'] = df.loc[i, '총상품금액']\n",
    "    elif df.loc[i, '상품'] == '팍팍콜라겐':\n",
    "        df.loc[i, '위메프_팍팍콜라겐'] = df.loc[i, '총상품금액']\n",
    "    elif df.loc[i, '상품'] == '아리얼패드':\n",
    "        df.loc[i, '위메프_아리얼패드'] = df.loc[i, '총상품금액']\n",
    "    elif df.loc[i, '상품'] == '디어달리아':\n",
    "        df.loc[i, '위메프_디어달리아'] = df.loc[i, '총상품금액']\n",
    "    elif df.loc[i, '상품'] == '바이위시트렌드':\n",
    "        df.loc[i, '위메프_바이위시트렌드'] = df.loc[i, '총상품금액']\n",
    "    elif df.loc[i, '상품'] == '호박마스크팩':\n",
    "        df.loc[i, '위메프_호박마스크팩'] = df.loc[i, '총상품금액']\n",
    "        \n",
    "df = df.drop(['상품', '총상품금액'], axis=1)\n",
    "df = df.rename(columns={'주문일': '날짜'})\n",
    "df = df.groupby('날짜').sum()\n",
    "\n",
    "df\n",
    "\n",
    "df.to_csv('/Users/danie1ryu/Downloads/위메프_매출(배송기준)_2019-04-22_2019-10-21.csv')\n",
    "df.to_excel('/Users/danie1ryu/Downloads/위메프_매출(배송기준)_2019-04-22_2019-10-21.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#11번가 매출 (배송기준)\n",
    "\n",
    "import pandas as pd\n",
    "import datetime\n",
    "\n",
    "\n",
    "date_list = [\n",
    "    '2019-04-22', '2019-04-26',\n",
    "    '2019-04-30',\n",
    "    '2019-05-14','2019-05-15','2019-05-24',\n",
    "    '2019-06-07',\n",
    "    '2019-06-10','2019-06-11', '2019-06-13','2019-06-14',\n",
    "    '2019-06-24','2019-06-25',\n",
    "    '2019-07-01','2019-07-02', '2019-07-04','2019-07-05',\n",
    "    '2019-07-08','2019-07-09', '2019-07-10', '2019-07-11','2019-07-12',\n",
    "    '2019-07-15','2019-07-16', '2019-07-18','2019-07-19',\n",
    "    '2019-07-22','2019-07-23','2019-07-24','2019-07-25','2019-07-26',\n",
    "    '2019-07-29','2019-07-30','2019-07-31','2019-08-01','2019-08-02',\n",
    "    '2019-08-05','2019-08-06','2019-08-07', '2019-08-09',\n",
    "    '2019-08-12','2019-08-13', '2019-08-14', '2019-08-16',\n",
    "    '2019-08-19', '2019-08-20', '2019-08-21', '2019-08-22', '2019-08-23', \n",
    "    '2019-08-26', '2019-08-27', '2019-08-28', '2019-08-29', '2019-08-30', \n",
    "    '2019-09-02', '2019-09-03', '2019-09-04', '2019-09-05', '2019-09-06', '2019-09-09', '2019-09-10',\n",
    "    '2019-09-16', '2019-09-17', '2019-09-18', '2019-09-19', '2019-09-23'\n",
    "      ]\n",
    "\n",
    "channel = '11번가_배송_'\n",
    "data_format = '.xls'\n",
    "\n",
    "frames = []\n",
    "for d in date_list:\n",
    "    df = pd.read_excel('/Users/londonpark/Desktop/배송 데이터 RAW/' + channel + d + data_format)\n",
    "    col_names = list(df.loc[0])\n",
    "    df = df.loc[1:, :]\n",
    "    df.columns = col_names\n",
    "    df = df[['결제일시', '상품명', '주문금액']]\n",
    "    df = df.set_index('결제일시')\n",
    "    df = df.reset_index()\n",
    "    for i in range(len(df)):\n",
    "        df.loc[i, '결제일시'] = datetime.datetime.strptime(str(df.loc[i, '결제일시']).split(' ')[0], '%Y/%m/%d').strftime('%Y-%m-%d')\n",
    "    frames.append(df)\n",
    "\n",
    "df = pd.concat(frames)\n",
    "df = df.set_index('결제일시')\n",
    "df = df.reset_index()\n",
    "\n",
    "for i in range(len(df)):\n",
    "    if '점프업' in df.loc[i, '상품명'] or '하이정' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '점프업하이정'\n",
    "    elif '호박' in df.loc[i, '상품명'] and '마스크' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '호박마스크팩'\n",
    "    elif '호박' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '호박앰플'\n",
    "    elif '테일러' in df.loc[i, '상품명'] or '푸룬' in df.loc[i, '상품명'] or '젤리' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '테일러푸룬젤리'\n",
    "    elif '팍팍' in df.loc[i, '상품명'] or '콜라겐' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '팍팍콜라겐'\n",
    "    elif '아리얼' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '아리얼패드'\n",
    "    elif '디어달리아' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '디어달리아'\n",
    "    elif '바이위시트렌드' in df.loc[i, '상품명']:\n",
    "        df.loc[i, '상품'] = '바이위시트렌드'\n",
    "    else:\n",
    "        df.loc[i, '상품'] = 'Others'\n",
    "\n",
    "df = df[['결제일시', '상품', '주문금액']]\n",
    "\n",
    "for i in range(len(df)):\n",
    "    df.loc[i, '주문금액'] = int(''.join(df.loc[i, '주문금액'].split(',')))\n",
    "    \n",
    "df = df.groupby(['결제일시', '상품'], as_index=False).sum()\n",
    "\n",
    "df_add = pd.DataFrame({'11번가_점프업하이정': [0], '11번가_호박앰플': [0], '11번가_테일러푸룬젤리': [0], '11번가_팍팍콜라겐': [0], '11번가_아리얼패드': [0], '11번가_디어달리아': [0], '11번가_바이위시트렌드': [0], '11번가_호박마스크팩': [0]})\n",
    "\n",
    "\n",
    "df = pd.concat([df, df_add], axis=1)\n",
    "\n",
    "df= df.fillna(0)\n",
    "\n",
    "for i in range(len(df)):\n",
    "    if df.loc[i, '상품'] == '점프업하이정':\n",
    "        df.loc[i, '11번가_점프업하이정'] = df.loc[i, '주문금액']\n",
    "    elif df.loc[i, '상품'] == '호박앰플':\n",
    "        df.loc[i, '11번가_호박앰플'] = df.loc[i, '주문금액']\n",
    "    elif df.loc[i, '상품'] == '테일러푸룬젤리':\n",
    "        df.loc[i, '11번가_테일러푸룬젤리'] = df.loc[i, '주문금액']\n",
    "    elif df.loc[i, '상품'] == '팍팍콜라겐':\n",
    "        df.loc[i, '11번가_팍팍콜라겐'] = df.loc[i, '주문금액']\n",
    "    elif df.loc[i, '상품'] == '아리얼패드':\n",
    "        df.loc[i, '11번가_아리얼패드'] = df.loc[i, '주문금액']\n",
    "    elif df.loc[i, '상품'] == '디어달리아':\n",
    "        df.loc[i, '11번가_디어달리아'] = df.loc[i, '주문금액']\n",
    "    elif df.loc[i, '상품'] == '바이위시트렌드':\n",
    "        df.loc[i, '11번가_바이위시트렌드'] = df.loc[i, '주문금액']\n",
    "    elif df.loc[i, '상품'] == '호박마스크팩':\n",
    "        df.loc[i, '11번가_호박마스크팩'] = df.loc[i, '주문금액']\n",
    "        \n",
    "df = df.drop(['상품', '주문금액'], axis=1)\n",
    "df = df.rename(columns={'결제일시': '날짜'})\n",
    "df = df.groupby('날짜').sum()\n",
    "\n",
    "df\n",
    "\n",
    "df.to_csv('/Users/londonpark/Downloads/11번가_매출(배송기준)_2019-04-22_2019-09-23.csv')\n",
    "df.to_excel('/Users/londonpark/Downloads/11번가_매출(배송기준)_2019-04-22_2019-09-23.xlsx')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#1. 주간_주요채널/기타채널 매출 데이터 통합\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "df = pd.read_csv('/Users/londonpark/Downloads/기타채널_매출(배송기준)_2019-04-22_2019-09-23.csv', index_col=0)\n",
    "\n",
    "weekly_dict = {}\n",
    "weekly_dict[0] = df.loc['2019-04-29': '2019-05-05', :].T #5월 1주차 매출\n",
    "weekly_dict[1] = df.loc['2019-05-06': '2019-05-12', :].T #5월 2주차 매출\n",
    "weekly_dict[2] = df.loc['2019-05-13': '2019-05-19', :].T #5월 3주차 매출\n",
    "weekly_dict[3] = df.loc['2019-05-20': '2019-05-26', :].T #5월 4주차 매출\n",
    "weekly_dict[4] = df.loc['2019-05-27': '2019-06-02', :].T #5월 5주차 매출\n",
    "weekly_dict[5] = df.loc['2019-06-03': '2019-06-09', :].T #6월 1주차 매출\n",
    "weekly_dict[6] = df.loc['2019-06-10': '2019-06-16', :].T #6월 2주차 매출\n",
    "weekly_dict[7] = df.loc['2019-06-17': '2019-06-23', :].T #6월 3주차 매출\n",
    "weekly_dict[8] = df.loc['2019-06-24': '2019-06-30', :].T #6월 4주차 매출\n",
    "weekly_dict[9] = df.loc['2019-07-01': '2019-07-07', :].T #7월 1주차 매출\n",
    "weekly_dict[10] = df.loc['2019-07-08': '2019-07-14', :].T #7월 2주차 매출\n",
    "weekly_dict[11] = df.loc['2019-07-15': '2019-07-21', :].T #7월 3주차 매출\n",
    "weekly_dict[12] = df.loc['2019-07-22': '2019-07-28', :].T #7월 4주차 매출\n",
    "weekly_dict[13] = df.loc['2019-07-29': '2019-08-04', :].T #8월 1주차 매출\n",
    "weekly_dict[14] = df.loc['2019-08-05': '2019-08-11', :].T #8월 2주차 매출\n",
    "weekly_dict[15] = df.loc['2019-08-12': '2019-08-18', :].T #8월 3주차 매출\n",
    "weekly_dict[16] = df.loc['2019-08-19': '2019-08-25', :].T #8월 4주차 매출\n",
    "weekly_dict[17] = df.loc['2019-08-26': '2019-09-01', :].T #8월 5주차 매출\n",
    "weekly_dict[18] = df.loc['2019-09-02': '2019-09-08', :].T #9월 1주차 매출\n",
    "weekly_dict[19] = df.loc['2019-09-09': '2019-09-15', :].T #9월 2주차 매출\n",
    "weekly_dict[20] = df.loc['2019-09-16': '2019-09-22', :].T #9월 2주차 매출\n",
    "\n",
    "weeks_list = ['5월 1주차', '5월 2주차', '5월 3주차', '5월 4주차', '5월 5주차', \n",
    "              '6월 1주차', '6월 2주차', '6월 3주차', '6월 4주차', \n",
    "              '7월 1주차', '7월 2주차', '7월 3주차', '7월 4주차', \n",
    "              '8월 1주차', '8월 2주차', '8월 3주차', '8월 4주차', '8월 5주차',\n",
    "              '9월 1주차', '9월 2주차', '9월 3주차']\n",
    "frames = []\n",
    "\n",
    "for i in range(len(weeks_list)):\n",
    "    weekly_dict[i][weeks_list[i]] = weekly_dict[i].sum(axis=1)\n",
    "    weekly_dict[i] = weekly_dict[i].T.iloc[-1, :]\n",
    "    frames.append(weekly_dict[i])\n",
    "\n",
    "total_combined = pd.concat(frames, axis=1).T\n",
    "total_combined = total_combined.reset_index()\n",
    "total_combined.rename(columns= {'index': '기간'}, inplace=True)\n",
    "total_combined.set_index('기간', inplace=True)\n",
    "total_combined\n",
    "\n",
    "\n",
    "total_combined.to_csv('/Users/londonpark/Downloads/기타채널_주간_매출(배송기준)_2019-04-29_2019-09-23.csv')\n",
    "total_combined.to_excel('/Users/londonpark/Downloads/기타채널_주간_매출(배송기준)_2019-04-29_2019-09-23.xlsx')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
